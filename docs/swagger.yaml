basePath: /v1
definitions:
  models.Companies:
    properties:
      created_at:
        type: string
      currency_name:
        type: string
      description:
        type: string
      homepage_url:
        type: string
      id:
        type: string
      locale:
        type: string
      logo_url:
        type: string
      market:
        type: string
      name:
        type: string
      primary_exchange:
        type: string
      ticker:
        type: string
      total_employees:
        type: number
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.UserTransactions:
    properties:
      buy_or_sell:
        type: string
      company_stock_id:
        type: string
      created_at:
        type: string
      game_number:
        type: integer
      id:
        type: string
      quantity:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  v1Users.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  v1Users.UserRegistrationRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  v1Users.UserRegistrationResponse:
    properties:
      current_balance:
        type: number
      current_game_number:
        type: integer
      email:
        type: string
      starting_balance:
        type: number
      username:
        type: string
    type: object
  v1companystock.BuyOrSellCompanyStocksRequest:
    properties:
      buy_or_sell:
        type: string
      company_stock_id:
        type: string
      game_number:
        type: integer
      quantity:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Capital-Challenge backend API.
  title: Capital-Challenge API
  version: "1.0"
paths:
  /companies/{ticker}:
    get:
      consumes:
      - application/json
      description: get company info by Ticker
      parameters:
      - description: Ticker
        in: path
        name: ticker
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Companies'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Company info
      tags:
      - companies
  /company-stocks:
    get:
      description: get the daily information about company stocks
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Daily Company Stock
      tags:
      - company_stock
  /company-stocks/{user_id}:
    post:
      description: buy or sell the selected amount of company stock
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1companystock.BuyOrSellCompanyStocksRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserTransactions'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: BuyOrSellCompanyStock
      tags:
      - company_stock
  /users/:
    post:
      description: Login user
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1Users.UserLoginRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Login user
      tags:
      - users
  /users/register:
    post:
      description: Register user
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1Users.UserRegistrationRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Users.UserRegistrationResponse'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Register user
      tags:
      - users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
